-- MySQL Script generated by MySQL Workbench
-- Thu Jul  4 10:03:02 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Secretaria Uemg
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Secretaria Uemg
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Secretaria Uemg` DEFAULT CHARACTER SET utf8 ;
USE `Secretaria Uemg` ;

-- -----------------------------------------------------
-- Table `Secretaria Uemg`.`curso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Secretaria Uemg`.`curso` (
  `idcur` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idcur`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Secretaria Uemg`.`tipo_usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Secretaria Uemg`.`tipo_usuario` (
  `idtipo` INT NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(255) NOT NULL,
  `tipo_usuario` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idtipo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Secretaria Uemg`.`administrador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Secretaria Uemg`.`administrador` (
  `idadm` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(255) NULL,
  `cpf` INT NULL,
  `endereco` VARCHAR(255) NULL,
  `cidade` VARCHAR(45) NULL,
  `estado` VARCHAR(20) NULL,
  `telefone` INT NULL,
  `senha` VARCHAR(45) NULL,
  `status` INT NULL,
  `tipo_usuario_idtipo` INT NOT NULL,
  PRIMARY KEY (`idadm`),
  INDEX `fk_administrador_tipo_usuario1_idx` (`tipo_usuario_idtipo` ASC) VISIBLE,
  CONSTRAINT `fk_administrador_tipo_usuario1`
    FOREIGN KEY (`tipo_usuario_idtipo`)
    REFERENCES `Secretaria Uemg`.`tipo_usuario` (`idtipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Secretaria Uemg`.`aluno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Secretaria Uemg`.`aluno` (
  `idalu` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(255) NOT NULL,
  `cpf` INT NOT NULL,
  `ra` INT NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `celular` INT NOT NULL,
  `periodo` INT NULL,
  `turno` VARCHAR(45) NOT NULL,
  `status` INT NOT NULL,
  `senha` VARCHAR(45) NOT NULL,
  `alunocol` VARCHAR(45) NOT NULL,
  `tipo_usuario_idtipo` INT NOT NULL,
  `curso_idcur` INT NOT NULL,
  PRIMARY KEY (`idalu`),
  INDEX `fk_aluno_tipo_usuario1_idx` (`tipo_usuario_idtipo` ASC) VISIBLE,
  INDEX `fk_aluno_curso1_idx` (`curso_idcur` ASC) VISIBLE,
  CONSTRAINT `fk_aluno_tipo_usuario1`
    FOREIGN KEY (`tipo_usuario_idtipo`)
    REFERENCES `Secretaria Uemg`.`tipo_usuario` (`idtipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_aluno_curso1`
    FOREIGN KEY (`curso_idcur`)
    REFERENCES `Secretaria Uemg`.`curso` (`idcur`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Secretaria Uemg`.`coordenador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Secretaria Uemg`.`coordenador` (
  `idcoor` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(255) NULL,
  `cpf` INT NULL,
  `senha` VARCHAR(45) NULL,
  `status` INT NULL,
  `masp` INT NULL,
  `tipo_usuario_idtipo` INT NOT NULL,
  `curso_idcur` INT NOT NULL,
  PRIMARY KEY (`idcoor`, `curso_idcur`),
  INDEX `fk_coordenador_tipo_usuario_idx` (`tipo_usuario_idtipo` ASC) VISIBLE,
  INDEX `fk_coordenador_curso1_idx` (`curso_idcur` ASC) VISIBLE,
  CONSTRAINT `fk_coordenador_tipo_usuario`
    FOREIGN KEY (`tipo_usuario_idtipo`)
    REFERENCES `Secretaria Uemg`.`tipo_usuario` (`idtipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_coordenador_curso1`
    FOREIGN KEY (`curso_idcur`)
    REFERENCES `Secretaria Uemg`.`curso` (`idcur`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Secretaria Uemg`.`solicitação`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Secretaria Uemg`.`solicitação` (
  `idsol` INT NOT NULL AUTO_INCREMENT,
  `solicitação` VARCHAR(255) NULL,
  `justificativa` VARCHAR(255) NULL,
  `curso` VARCHAR(45) NULL,
  `status` VARCHAR(45) NULL,
  `anexo` BLOB NULL,
  `tipo_sol` VARCHAR(100) NULL,
  `aluno_idalu` INT NOT NULL,
  PRIMARY KEY (`idsol`),
  INDEX `fk_solicitação_aluno1_idx` (`aluno_idalu` ASC) VISIBLE,
  CONSTRAINT `fk_solicitação_aluno1`
    FOREIGN KEY (`aluno_idalu`)
    REFERENCES `Secretaria Uemg`.`aluno` (`idalu`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Secretaria Uemg`.`encaminhamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Secretaria Uemg`.`encaminhamento` (
  `idenc` INT NOT NULL AUTO_INCREMENT,
  `data_enc` DATE NULL,
  `data_retorno` DATE NULL,
  `solicitação_idsol` INT NOT NULL,
  `administrador_idadm` INT UNSIGNED NOT NULL,
  `coordenador_idcoor` INT UNSIGNED NOT NULL,
  `coordenador_nome_idcur` INT NOT NULL,
  PRIMARY KEY (`idenc`, `coordenador_idcoor`, `coordenador_nome_idcur`),
  INDEX `fk_encaminhamento_solicitação1_idx` (`solicitação_idsol` ASC) VISIBLE,
  INDEX `fk_encaminhamento_administrador1_idx` (`administrador_idadm` ASC) VISIBLE,
  INDEX `fk_encaminhamento_coordenador1_idx` (`coordenador_idcoor` ASC, `coordenador_nome_idcur` ASC) VISIBLE,
  CONSTRAINT `fk_encaminhamento_solicitação1`
    FOREIGN KEY (`solicitação_idsol`)
    REFERENCES `Secretaria Uemg`.`solicitação` (`idsol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_encaminhamento_administrador1`
    FOREIGN KEY (`administrador_idadm`)
    REFERENCES `Secretaria Uemg`.`administrador` (`idadm`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_encaminhamento_coordenador1`
    FOREIGN KEY (`coordenador_idcoor` , `coordenador_nome_idcur`)
    REFERENCES `Secretaria Uemg`.`coordenador` (`idcoor` , `curso_idcur`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Secretaria Uemg`.`analise`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Secretaria Uemg`.`analise` (
  `idana` INT NOT NULL AUTO_INCREMENT,
  `data_conc` DATE NOT NULL,
  `justificativa` VARCHAR(255) NOT NULL,
  `resultado` VARCHAR(45) NOT NULL,
  `solicitação_idsol` INT NOT NULL,
  PRIMARY KEY (`idana`),
  INDEX `fk_analise_solicitação1_idx` (`solicitação_idsol` ASC) VISIBLE,
  CONSTRAINT `fk_analise_solicitação1`
    FOREIGN KEY (`solicitação_idsol`)
    REFERENCES `Secretaria Uemg`.`solicitação` (`idsol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
